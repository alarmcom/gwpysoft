#!/bin/bash -e
#
# Set up a new python virtualenv for the GWpy software stack

# get name
target=$1
[[ -z ${target} ]] && target=${HOME}/opt/gwpysoft
packagefile=$2

# -- install dependencies for virtualenv itself
# get python version
if [[ -z ${PYTHON_VERSION} ]]; then
    PYTHON_VERSION=`python -c '
import sys;
print(".".join(map(str, sys.version_info[:2])))'`
fi
if [[ -z ${PYTHON_USER_BASE} ]]; then
    PYTHON_USER_BASE=`python -c 'import site; print(site.USER_BASE)'`
fi
if [[ -z ${PYTHON_USER_SITE} ]]; then
    PYTHON_USER_SITE=`python -c 'import site; print(site.USER_SITE)'`
fi
# create local directories
mkdir -p ${PYTHON_USER_SITE} 1>/dev/null

# install pip
which pip &>/dev/null || easy_install -U --prefix=${PYTHON_USER_BASE} pip
export PATH=${PATH}:${PYTHON_USER_BASE}/bin

# install virtualenv
pip install "virtualenv>=13.0" --user --quiet
echo "Virtualenv is now installed"

# -- create virtualenv
virtualenv $target --system-site-packages --clear
. $target/bin/activate

# install dependencies
if [[ -f ${packagefile} ]]; then
    echo "Installing packages:"
    while read package; do
        echo -n "    $package ... "
        pip install --quiet $package
        echo "installed"
    done < $packagefile
fi

if [[ -z ${TMPDIR} ]]; then
    TMPDIR="/tmp"
fi
builddir="${TMPDIR}/gwpysoft-build-$USER"
mkdir -p ${builddir}
cd ${builddir}


# list packages installed here for use later
piplist_="$TMPDIR/pip-list-$RANDOM.txt"
pip list installed --local > ${piplist_}

# install matplotlib basemap (if we installed matplotlib)
if grep -q matplotlib ${piplist_}; then
    echo -n "    mpl-basemap ... "
    BASEMAP_VERSION="1.0.7"
    GEOS_VERSION="3.3.3"
    wget -q http://downloads.sourceforge.net/project/matplotlib/matplotlib-toolkits/basemap-${BASEMAP_VERSION}/basemap-${BASEMAP_VERSION}.tar.gz -O basemap-${BASEMAP_VERSION}.tar.gz
    tar -zxf basemap-${BASEMAP_VERSION}.tar.gz
    rm -f basemap-${BASEMAP_VERSION}.tar.gz
    cd basemap-${BASEMAP_VERSION}
    # build geos
    export GEOS_DIR=${target}
    cd geos-${GEOS_VERSION}
    ./configure --prefix=${GEOS_DIR} --quiet 1>/dev/null
    set +e
    make &>./geos-build.err
    if [[ "$?" -ne 0 ]]; then
        cat ./geos-build.err
        exit 1
    fi
    rm ./geos-build.err
    make install &>./geos-install.err
    if [[ "$?" -ne 0 ]]; then
        cat ./geos-install.err
        exit 1
    fi
    rm -f ./geos-install.err
    # install basemap
    cd ../
    python setup.py --quiet install &>./basemap-install.err
    if [[ "$?" -ne 0 ]]; then
        cat ./basemap-install.err
        exit 1
    fi
    set -e
    rm -f ./basemap-install.err
    cd ../
    rm -rf basemap-1.0.7
    echo "installed"
fi
echo "All packages installed"

# install MKL-compiled numpy/scipy
if grep -q scipy ${piplist_}; then
    has_scipy=true
    has_numpy=true
fi
if grep -q numpy ${piplist_}; then
    has_numpy=true
fi
if command -v icc 1>/dev/null && [[ ${has_numpy} = true ]]; then
    echo "MKL detected on system, installing optimised numpy/scipy..."
    MKL_BUILD=${target}-mkl
    ICC_PATH=${PROD_DIR}

    # build numpy
    echo -n "    numpy ... "
    NUMPY_VERSION=`python -c "import numpy; print(numpy.__version__)"`
    wget -q https://github.com/numpy/numpy/archive/v${NUMPY_VERSION}.tar.gz -O numpy-${NUMPY_VERSION}.tar.gz
    tar -zxf numpy-${NUMPY_VERSION}.tar.gz
    rm -f numpy-${NUMPY_VERSION}.tar.gz
    cd numpy-${NUMPY_VERSION}
    echo "[mkl]
library_dirs = ${ICC_PATH}/mkl/lib/intel64/
include_dirs = ${ICC_PATH}/mkl/include/
mkl_libs = mkl_rt
lapack_libs = 
" > site.cfg
    python setup.py config --quiet --compiler=intelem build_clib --compiler=intelem build_ext --compiler=intelem install --prefix ${MKL_BUILD}
    cd -
    rm -rf numpy-${NUMPY_VERSION}/
    echo "installed"

    # install scipy
    if has_scipy; then
        echo -n "    scipy ... "
        SCIPY_VERSION=`python -c "import scipy; print(scipy.__version__)"`
        wget -q https://github.com/scipy/scipy/archive/v${SCIPY_VERSION}.tar.gz -O scipy-${SCIPY_VERSION}.tar.gz
        tar -zxf scipy-${SCIPY_VERSION}.tar.gz
        rm -rf scipy-${SCIPY_VERSION}.tar.gz
        cd scipy-${SCIPY_VERSION}
        python setup.py config --quiet --compiler=intelem --fcompiler=intelem build_clib --compiler=intelem --fcompiler=intelem build_ext --compiler=intelem --fcompiler=intelem install --prefix ${MKL_BUILD}
        cd -
        rm -rf scipy-${SCIPY_VERSION}/
    fi

    # make etc file
    mkdir -p ${MKL_BUILD}/etc
    MKL_ENV=${MKL_BUILD}/etc/gwpy-user-env.sh
    echo '#!/usr/bin/env bash
ROOTDIR=$(readlink -f $(dirname "$BASH_SOURCE")/..)

# set PATH
PATH=${ROOTDIR}/bin:${PATH}
PYTHONPATH=${ROOTDIR}/lib64/python2.6/site-packages:${ROOTDIR}/lib/python2.6/site-packages:${PYTHONPATH}
' > ${MKL_ENV}
    echo "installed"
fi

# clean up
cd
rmdir ${builddir}
rm -f ${piplist_}

echo "Install complete. The following packages were installed"
pip list installed --local

echo "Virtualenv is ready, you can activate the virtualenv via

. ${VIRTUAL_ENV}/bin/activate
"
deactivate
